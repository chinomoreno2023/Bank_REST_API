spring.application.name=Bank_API

encryption.keystore-path=/app/config/app-secrets.p12
#encryption.keystore-path=app-secrets.p12
encryption.keystore-password=${ENCRYPTION_KEYSTORE_PASSWORD}
encryption.jwt-key-alias=${JWT_KEY_ALIAS}
encryption.card-key-alias=${CARD_KEY_ALIAS}
encryption.refresh-key-alias=${REFRESH_KEY_ALIAS}
encryption.access-token-expiration=${JWT_ACCESS_TOKEN_EXPIRATION_MINUTES}
encryption.refresh-token-expiration=${JWT_REFRESH_TOKEN_EXPIRATION_DAYS}
encryption.pepper=${ENCRYPTION_PEPPER}

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:${POSTGRES_PORT}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

server.port=8443

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.bootstrap-servers=kafka-1:9090,kafka-2:9090,kafka-3:9090
#spring.kafka.consumer.bootstrap-servers=localhost:9092,localhost:9094,localhost:9096
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=transfer-events
spring.kafka.consumer.properties.spring.json.trusted.packages="com.example.bankcards.entity.event"

spring.kafka.producer.bootstrap-servers=kafka-1:9090,kafka-2:9090,kafka-3:9090
#spring.kafka.producer.bootstrap-servers=localhost:9092,localhost:9094,localhost:9096
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.transaction-id-prefix=transfer-service-${random.value}-
spring.kafka.producer.properties.interceptor.classes=com.example.bankcards.config.kafka.MdcKafkaProducerInterceptor

app.cors.allowed-origins=https://localhost:8443
app.cors.dev-origins=

springdoc.swagger-ui.url=/openapi.yaml

server.ssl.enabled=true
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=${SSL_PASSWORD}
server.ssl.key-store-type=PKCS12

spring.cache.type=redis
spring.cache.cache-names=redis-cache
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.cluster.nodes=redis-node-1:7001,redis-node-2:7002,redis-node-3:7003
spring.data.redis.cluster.max-redirects=3
