spring.application.name=Bank_API

encryption.keystore-path=/app/config/app-secrets.p12
#encryption.keystore-path=app-secrets.p12
encryption.keystore-password=${ENCRYPTION_KEYSTORE_PASSWORD}
encryption.jwt-key-alias=${JWT_KEY_ALIAS}
encryption.card-key-alias=${CARD_KEY_ALIAS}
encryption.refresh-key-alias=${REFRESH_KEY_ALIAS}
encryption.access-token-expiration=${JWT_ACCESS_TOKEN_EXPIRATION_MINUTES}
encryption.refresh-token-expiration=${JWT_REFRESH_TOKEN_EXPIRATION_DAYS}
encryption.pepper=${ENCRYPTION_PEPPER}

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:${POSTGRES_PORT}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

server.port=${APP_PORT:8443}

spring.kafka.properties.security.protocol=SSL
spring.kafka.properties.ssl.endpoint.identification.algorithm=${SPRING_KAFKA_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM}
spring.kafka.properties.ssl.keystore.type=JKS
spring.kafka.properties.ssl.truststore.type=JKS
spring.kafka.properties.ssl.truststore.password=${KAFKA_SSL_TRUSTSTORE_PASSWORD}
spring.kafka.properties.ssl.truststore.location=/app/config/kafka.truststore.jks
spring.kafka.properties.ssl.keystore.location=/app/config/kafka.keystore.jks
spring.kafka.properties.ssl.keystore.password=${KAFKA_SSL_KEYSTORE_PASSWORD}
spring.kafka.properties.ssl.key.password=${KAFKA_SSL_KEY_PASSWORD}
spring.kafka.properties.ssl.key-alias=${KAFKA_SSL_KEY_ALIAS}

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.bootstrap-servers=kafka-1:9092,kafka-2:9092,kafka-3:9092
#spring.kafka.consumer.bootstrap-servers=localhost:${KAFKA_1_PORT},localhost:${KAFKA_2_PORT},localhost:${KAFKA_3_PORT}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID}
spring.kafka.consumer.properties.spring.json.trusted.packages="com.example.bankcards.entity.event"

spring.kafka.producer.bootstrap-servers=kafka-1:9092,kafka-2:9092,kafka-3:9092
#spring.kafka.producer.bootstrap-servers=localhost:${KAFKA_1_PORT},localhost:${KAFKA_2_PORT},localhost:${KAFKA_3_PORT}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.max.in.flight.requests.per.connection=1
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.transaction-id-prefix=transfer-service-${random.value}-
spring.kafka.producer.properties.interceptor.classes=com.example.bankcards.config.kafka.MdcKafkaProducerInterceptor

app.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS}
app.cors.dev-origins=${APP_CORS_DEV_ORIGINS}

springdoc.swagger-ui.url=/openapi.yaml

server.ssl.enabled=true
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=${SSL_PASSWORD}
server.ssl.key-store-type=PKCS12

spring.cache.type=redis
spring.cache.cache-names=redis-cache
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.cluster.nodes=redis-node-1:${REDIS_NODE_1_PORT},redis-node-2:${REDIS_NODE_2_PORT},redis-node-3:${REDIS_NODE_3_PORT}
spring.data.redis.cluster.max-redirects=3
spring.data.redis.ssl.enabled=true
spring.data.redis.ssl.bundle=redis
spring.ssl.bundle.pem.redis.keystore.certificate=file:/app/config/redis_client.crt
spring.ssl.bundle.pem.redis.keystore.private-key=file:/app/config/redis_client.key
spring.ssl.bundle.pem.redis.truststore.certificate=file:/app/config/redis_ca.crt

admin.username=${ADMIN_USERNAME}
admin.password=${ADMIN_PASSWORD}
admin.first-card-number=${FIRST_CARD_NUMBER}
admin.second-card-number=${SECOND_CARD_NUMBER}
admin.initial-cards-expiration=${INITIAL_CARDS_EXPIRATION}
